Metadata-Version: 2.1
Name: pystdlib
Version: 0.0.2
Summary: Personal convenience package.
Home-page: UNKNOWN
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3.10
Classifier: License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown

# PYSTDLIB #
My personal convenience classes, functions and whatnots. Named after the C standard library, because I'm too lazy to be original.


## Notes #
Only tested on Python 3.10.1! (Should run on any Python 3.x versions tho)


## Installation #
 ### Normal installation #
  To install pystdlib just to use it, run:
  > Windows:
  >>`py -m pip install pystdlib`
  > MacOS & Linux:
  >>`python3 -m pip install pystdlib`
 
 ### Developer installation #
  To install pystdlib with the needed development packages, run:
  > Windows:
  >> `py -m pip install -e .[dev]`
  > MacOS & Linux:
  >> `python3 -m pip install -e .[dev]`
 


## Documentation #
> module `pystdlib`:
>> class `pystdlib.Iota`:
>> A Python implementation of the `iota` keyword in Go.
>>> int `Iota.iota_counter`:
>>> Integer representing the current value of the `Iota` instance.
>>>
>>> function `Iota.iota()`:
>>> Return the current value of `Iota.iota_counter` and increment
>>
>>> function `Iota.reset()`:
>>> Reset the value of `Iota.iota_counter`
>
>> function `pystdlib.hcf(msg:str = '', die:bool = False) -> NoReturn`:
>> Halt and Catch Fire.
>> Depending on `die`:
>>- if `die` is set, then print `msg` and exit with code 1;
>>- else assert `False` with message `msg`.

<br><br>

## Examples #
```python
>>>  import pystdlib as std
>>> i = std.Iota() # examples for the Iota instance
>>> i.iota() # iota_counter is now 1
0
>>> i.iota() # iota_counter is now 2
1
>>> i.iota_counter # iota_counter is now 2 (as demonstrated)
2
>>> i.reset()
>>> i.iota_counter
0
>>>
>>>
>>>  hcf(msg = "Look, it's an assertion!")
Traceback (most recent call last):
File "<stdin>", line 1, in  <module>
AsserionError: Look, it's an assertion!
>>>  hcf(die = True)

[Program finished with  exit code 0]
```

